version: "3.8"

services:
  db:
    image: postgres:16
    container_name: my_postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: mydb
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d mydb"]
      interval: 10s
      retries: 5
    volumes:
      - pg_data:/var/lib/postgresql/data

  migrate:
    image: migrate/migrate:v4.15.2
    depends_on:
      db:
        condition:  service_healthy
    command: ["-path", "/migrations", "-database", "postgres://admin:secret@db:5432/mydb?sslmode=disable", "up"]
    volumes:
      - ./migrations:/migrations
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    depends_on:
      db:
        condition:  service_healthy
      migrate:
        condition: service_started
    healthcheck:
      test: ["CMD-SHELL", "rabbitmqctl status"]
      interval: 10s
      retries: 5
  redis:
    image: redis:7
    container_name: redis-cache
    ports:
      - "6379:6379"
    restart: unless-stopped
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s
    command: ["redis-server", "--requirepass", "secret"]

  api:
    build: .
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      DB_HOST: db
      DB_USER: admin
      DB_PASSWORD: secret
      DB_NAME: mydb
    env_file:
      - .env
    restart: always


volumes:
  pg_data:
  redis-data:
